#Copyright (C) 1997-2007 ZSNES Team ( zsKnight, _Demo_, pagefault, Nach )
#
#http://www.zsnes.com
#http://sourceforge.net/projects/zsnes
#https://zsnes.bountysource.com
#
#This program is free software; you can redistribute it and/or
#modify it under the terms of the GNU General Public License
#version 2 as published by the Free Software Foundation.
#
#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.
#
#You should have received a copy of the GNU General Public License
#along with this program; if not, write to the Free Software
#Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

CHIP_D=chips
CPU_D=cpu
DEBUG_D=debugger
EFF_D=effects
GUI_D=gui
JMA_D=jma
MMLIB_D=mmlib
NET_D=net
PORT_D=linux
TOOL_D=tools
VID_D=video
ZIP_D=zip

PSR=parsegen
PSR_H=cfg.h md.h input.h

CHIP_AO=$(CHIP_D)/7110proc.o $(CHIP_D)/c4proc.o $(CHIP_D)/dsp1proc.o\
	$(CHIP_D)/dsp2proc.o $(CHIP_D)/dsp3proc.o $(CHIP_D)/dsp4proc.o\
	$(CHIP_D)/fxemu2.o $(CHIP_D)/fxemu2b.o $(CHIP_D)/fxemu2c.o\
	$(CHIP_D)/fxtable.o $(CHIP_D)/obc1proc.o $(CHIP_D)/sa1proc.o\
	$(CHIP_D)/sa1regs.o $(CHIP_D)/sfxproc.o $(CHIP_D)/st10proc.o\
	$(CHIP_D)/st11proc.o
CHIP_CO=$(CHIP_D)/c4emu.o $(CHIP_D)/dsp1emu.o $(CHIP_D)/dsp3emu.o\
	$(CHIP_D)/dsp4emu.o $(CHIP_D)/obc1emu.o $(CHIP_D)/sdd1emu.o\
	$(CHIP_D)/seta10.o $(CHIP_D)/seta11.o

CPU_AO=$(CPU_D)/dma.o $(CPU_D)/dsp.o $(CPU_D)/dspproc.o $(CPU_D)/execute.o\
	$(CPU_D)/irq.o $(CPU_D)/memory.o $(CPU_D)/spc700.o $(CPU_D)/stable.o\
	$(CPU_D)/table.o $(CPU_D)/tablec.o
CPU_CO=$(CPU_D)/executec.o $(CPU_D)/memtable.o

DEBUG_CO=@DEBUG_CF@
DEBUG_QO=@DEBUG_QF@

EFF_CO=$(EFF_D)/burn.o $(EFF_D)/smoke.o $(EFF_D)/water.o

GUI_AO=$(GUI_D)/gui.o $(GUI_D)/menu.o
GUI_CO=$(GUI_D)/guifuncs.o

JMA_CO=@JMA_F@

MAIN_AO=endmem.o init.o vcache.o ztime.o
MAIN_CO=cfg.o initc.o input.o md.o patch.o ui.o version.o zdir.o\
	zloader.o zmovie.o zpath.o zstate.o ztimec.o

MMLIB_CO=@MMLIB_F@

NET_CO=
#$(NET_D)/ztcp.o

PORT_AO=$(PORT_D)/sdlintrf.o
PORT_CO=$(PORT_D)/audio.o $(PORT_D)/battery.o @GL_DRAW@ $(PORT_D)/lib.o\
	$(PORT_D)/safelib.o $(PORT_D)/sdllink.o $(PORT_D)/sw_draw.o

TOOL_CO=$(TOOL_D)/fileutil.o $(TOOL_D)/strutil.o

VID_AO=$(VID_D)/copyvwin.o $(VID_D)/makev16b.o $(VID_D)/makev16t.o\
	$(VID_D)/makevid.o $(VID_D)/mode716.o $(VID_D)/mode716b.o\
	$(VID_D)/mode716d.o $(VID_D)/mode716e.o $(VID_D)/mode716t.o\
	$(VID_D)/mv16tms.o\
	$(VID_D)/m716text.o $(VID_D)/newg162.o $(VID_D)/newgfx.o\
	$(VID_D)/newgfx16.o $(VID_D)/procvid.o\
	$(VID_D)/sw_draw.o $(VID_D)/2xsaiw.o $(VID_D)/hq2x16.o $(VID_D)/hq2x32.o\
	$(VID_D)/hq3x16.o $(VID_D)/hq3x32.o $(VID_D)/hq4x16.o $(VID_D)/hq4x32.o
VID_CO=$(VID_D)/procvidc.o $(VID_D)/ntsc.o

ZIP_CO=$(ZIP_D)/unzip.o $(ZIP_D)/zpng.o

Z_AOBJS=$(MAIN_AO) $(CHIP_AO) $(CPU_AO) $(GUI_AO) $(PORT_AO) $(VID_AO)
Z_COBJS=$(MAIN_CO) $(CHIP_CO) $(CPU_CO) $(DEBUG_CO) $(EFF_CO) $(GUI_CO)\
	$(JMA_CO) $(MMLIB_CO) $(NET_CO) $(PORT_CO) $(VID_CO) $(ZIP_CO)
Z_QOBJS=$(DEBUG_QO)
Z_OBJS=$(Z_AOBJS) $(Z_COBJS)

.PHONY: default main tools all install clean cclean tclean distclean
.SUFFIXES: .asm .c .cpp .psr

%.o: %.asm
	@NASMPATH@ @NFLAGS@ -o $@ $<
%.o: %.c
	@CC@ @CFLAGS@ -o $@ -c $<
%.o: %.cpp
	@CXX@ @CXXFLAGS@ -o $@ -c $<
%.o %.h: %.psr $(PSR)
	./$(PSR) @PSRFLAGS@ -gcc @CC@ -compile -flags "@CFLAGS@ -O1" -cheader $*.h -fname $* $*.o $<

default: main
all: main tools
main: makefile.dep $(Z_QOBJS) $(Z_OBJS)
	@ZC@ -o @ZSNESEXE@ $(Z_OBJS) @ZCFLAGS@ @LDFLAGS@
	rm -f version.o

$(PSR): parsegen.cpp
	@CXX@ @CXXFLAGS@ -o $@ $< -lz
$(DEBUG_D)/moc_ui.cpp: $(DEBUG_D)/ui.h
	moc -o $@ $(DEBUG_D)/ui.h
$(DEBUG_D)/ui_debugger.h: $(DEBUG_D)/debugger.ui
	uic -o $@ $(DEBUG_D)/debugger.ui

TOOLSEXE=$(TOOL_D)/archopt $(TOOL_D)/cutrtype $(TOOL_D)/extraext\
	$(TOOL_D)/macroll $(TOOL_D)/minwhite $(TOOL_D)/nreplace\
	$(TOOL_D)/sec-test $(TOOL_D)/srccount $(TOOL_D)/varrep
tools: $(TOOLSEXE) $(TOOL_D)/depbuild
$(TOOL_D)/archopt: $(TOOL_D)/archopt.c
	@CC@ @CFLAGS@ -m32 -o $@ $@.c
$(TOOL_D)/cutrtype: $(TOOL_D)/cutrtype.cpp $(TOOL_CO)
	@CXX@ @CXXFLAGS@ -o $@ $@.cpp $(TOOL_CO)
$(TOOL_D)/depbuild: $(TOOL_D)/depbuild.cpp $(TOOL_CO)
	@CXX@ @CXXFLAGS@ -o $@ $@.cpp $(TOOL_CO)
$(TOOL_D)/extraext: $(TOOL_D)/extraext.cpp $(TOOL_CO)
	@CXX@ @CXXFLAGS@ -o $@ $@.cpp $(TOOL_CO)
$(TOOL_D)/macroll: $(TOOL_D)/macroll.cpp $(TOOL_CO)
	@CXX@ @CXXFLAGS@ -o $@ $@.cpp $(TOOL_CO)
$(TOOL_D)/minwhite: $(TOOL_D)/minwhite.cpp $(TOOL_CO)
	@CXX@ @CXXFLAGS@ -o $@ $@.cpp $(TOOL_D)/fileutil.o
$(TOOL_D)/nreplace: $(TOOL_D)/nreplace.cpp $(TOOL_CO)
	@CXX@ @CXXFLAGS@ -o $@ $@.cpp $(TOOL_D)/fileutil.o
$(TOOL_D)/sec-test: $(TOOL_D)/sec-test.cpp $(TOOL_CO)
	@CXX@ @CXXFLAGS@ -o $@ $@.cpp $(TOOL_CO)
$(TOOL_D)/srccount: $(TOOL_D)/srccount.cpp $(TOOL_CO)
	@CXX@ @CXXFLAGS@ -o $@ $@.cpp $(TOOL_D)/fileutil.o
$(TOOL_D)/varrep: $(TOOL_D)/varrep.cpp $(TOOL_CO)
	@CXX@ @CXXFLAGS@ -o $@ $@.cpp $(TOOL_CO)

include makefile.dep

config.status: configure.in
	./autogen.sh --recheck
Makefile: config.status Makefile.in
	./config.status
makefile.dep: $(TOOL_D)/depbuild Makefile
	$(TOOL_D)/depbuild @CC@ "@CFLAGS@" @NASMPATH@ "@NFLAGS@" $(Z_AOBJS) $(Z_COBJS) > makefile.dep

# set ${prefix} so mandir works.
prefix=@prefix@
exec_prefix=@exec_prefix@
datarootdir=@datarootdir@

install:
	@INSTALL@ -d -m 0755 $(DESTDIR)/@bindir@
	@INSTALL@ -m 0755 @ZSNESEXE@ $(DESTDIR)/@bindir@
	@INSTALL@ -d -m 0755 $(DESTDIR)/@mandir@/man1
	@INSTALL@ -m 0644 linux/zsnes.1 $(DESTDIR)/@mandir@/man1
uninstall:
	rm -f @bindir@/$(notdir @ZSNESEXE@) @mandir@/man1/zsnes.1

clean:
	rm -f makefile.dep $(Z_OBJS) $(Z_QOBJS) $(PSR) $(PSR_H) @ZSNESEXE@
cclean:
	rm -f $(Z_COBJS) $(Z_QOBJS) $(PSR) $(PSR_H) @ZSNESEXE@
tclean:
	rm -f $(TOOL_CO) $(TOOLSEXE)
distclean: clean tclean
	rm -f Makefile aclocal.m4 configure config.log \
	config.status config.h $(TOOL_D)/depbuild
